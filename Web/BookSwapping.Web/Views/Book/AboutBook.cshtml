@using BookSwapping.Services.Contracts
@model BookSwapping.Models.ViewModels.Book.AboutBookViewModel
@inject IRequestedBookService RequestedBookService 
@{
    ViewData["Title"] = "AboutBook";
}

@{
    var img = String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.ImageContent));
}


<div class="card-header">
    <div class="card-title">
        <a asp-action="Edit" asp-controller="Book" asp-route-bookId="@Model.BookId" class="btn btn-info btn-sm">Редактирай</a>

        <a asp-action="Delete" asp-controller="Book" asp-route-bookId="@Model.BookId" asp-route-bookCoverId="@Model.BookCoverId" class="btn btn-danger btn-sm">Изтрий</a>
    </div>
    <div class="row">
        <div class="col-auto">
            <img src=@img class="img-fluid img-thumbnail" alt="@Model.Name" style="width: 250px;">
        </div>
        <div class="col">
            <div class="card-body">
                <h2 class="card-title">@Model.Name</h2>
                <h6 class="card-subtitle mt-2">Автор: @Model.Author</h6>
                <h6 class="card-subtitle mt-2">Жанр: @Model.Genre</h6>
                <h6 class="card-text mt-4">@Model.Description</h6>
            </div>

        </div>

    </div>
    <div>
        <h5>Хора искащи книгата</h5>
        @{
            var users = await this.RequestedBookService.ListWithUsers(Model.BookId);
        }

        @foreach (var usr in users)
        {
            <div class="d-inline-block btn btn-outline-info">
                @usr
            </div>
        }
    </div>
    
</div> 